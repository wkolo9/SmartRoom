//************ PINY: FIOLETOWY - RST - 9
//************       NIEBIESKI - SDA - 10
//************       ZIELONY - MOSI - 11
//************       ŻÓŁTY - MISO - 12
//************       BIAŁY - SCK - 13
//************       LED_R - A5
//************       LED_G - A4
//************       SERVO - A2
//************       

#include <IRremote.h>
#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>
#include <Stepper.h>

  //***********PINY ZAMKA DO DRZWI
#define SS_PIN 10
#define RST_PIN 9
#define LED_G A0 //define green LED pin
#define LED_R A1 //define red LED
#define BUZZER A2 //buzzer pin
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
Servo myServo; //define servo name

  //***********MODUŁ ZDALNEGO STEROWANIA
#define input_pin 4
IRrecv irrecv(input_pin);
decode_results signals;

  //***********PINY SILNICZKA
#define ILOSC_KROKOW 32
Stepper mojSilnik(ILOSC_KROKOW, 8, 6, 7, 5);
boolean rozlozona = 0;
boolean zlozona = 1;

  //***********PINY TAŚMY RGB
int R = 0, G = 255, B = 255;
#define pin_R A5
#define pin_B A4
#define pin_G A3
#define relaypin1 2
boolean status_T = 0;

  //***********PINY ŻARÓWKI
#define relaypin2 3  
boolean status_B = 0;

void setup() 
{
  Serial.begin(9600);   // Initiate a serial communication
  irrecv.enableIRIn();  //Initiate odbieranie danych xd
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  
  myServo.attach(A2); //servo pin
  myServo.write(0); //servo start position
  pinMode(LED_G, OUTPUT);
  pinMode(LED_R, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  pinMode(relaypin1, OUTPUT);
  pinMode(relaypin2, OUTPUT);
  //noTone(BUZZER);
}



void loop() 
{
  otwieranie_drzwi();
  sterowanie_roleta_i_ledami();
  //RGB_color(R, G, B);
  //RGB_color(0, 255, 255);
}




            //************FUNKCJE MODUŁÓW************
void RGB_color(int red_light_value, int green_light_value, int blue_light_value)
 {
  analogWrite(pin_R, red_light_value);
  analogWrite(pin_B, green_light_value);
  analogWrite(pin_G, blue_light_value);
}
            
void otwieranie_drzwi()
{  
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }

  String content = "";
  byte letter;
  
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }

  content.toUpperCase();
  if (content.substring(1) == "5C 9F 38 23") //change here the UID of the card/cards that you want to give access
  {
    delay(500);
    digitalWrite(LED_G, HIGH);
   // tone(BUZZER, 500);
    delay(300);
    //noTone(BUZZER);
    myServo.write(90);
    delay(5000);
    myServo.write(0);
    digitalWrite(LED_G, LOW);
  }
 
 else   {
    digitalWrite(LED_R, HIGH);
   // tone(BUZZER, 300);
    delay(1000);
    digitalWrite(LED_R, LOW);
    //noTone(BUZZER);
  } 
}


void sterowanie_roleta_i_ledami(){
  
if (irrecv.decode(&signals)) {
        Serial.println(signals.decode_type); // typ nadajnika
        Serial.print(F("wynik = 0x"));
        Serial.println(signals.value, HEX); // wynik w systemie szesnatkowym
        Serial.println(signals.bits); // ilość przesłanych danych
       // irrecv.blink13(true); // mrugamy diodami w arduino
        
                //********WŁĄCZANIE ŚWIATEŁ
        switch (signals.value){
          case 0xFFC23D:
             if (status_T == 0){
               digitalWrite(relaypin1, HIGH);
               status_T = 1;
               delay(150);
               break;
             }
             if (status_T == 1){
               digitalWrite(relaypin1, LOW);
               status_T = 0;
               delay(150);
               break;
           }

           case 0xFF906F:
             if (status_B == 0){
               digitalWrite(relaypin2, HIGH);
               status_B = 1;
               delay(150);
               break;
             }
             if (status_B == 1){
               digitalWrite(relaypin2, LOW);
               status_B = 0;
               delay(150);
               break;
           }
        }




        
              //*********LEDY
        if (signals.value == 0xFF6897) //zero
        {
          R = 0; G = 255; B = 255;
          RGB_color(R, G, B);
          delay(150);
        }
        
         if (signals.value == 0xFF30CF) ///jedynka
        {
          R = 255; G = 0; B = 255;
          RGB_color(R, G, B);
          delay(150);
        }
        
        if (signals.value == 0xFF18E7) //dwojka
        {
          R = 255; G = 255; B = 0;
          RGB_color(R, G, B);
          delay(150);
        }

   //SILNICZEK
  if (signals.value == 0xFF22DD) //w tył (lewo) -> calkowite skladanie rolety
        {
          if (rozlozona == 1){
            mojSilnik.setSpeed(1000); //podajemy prędkość obrotu wyrażona w rpm 
            mojSilnik.step(3500);
            delay(250);
            rozlozona = 0;
            zlozona = 1;
           }
        }

   if (signals.value == 0xFF02FD) // w przód(prawo) -> calkowite rozkladanie rolety
        {
          if (zlozona == 1){  
           mojSilnik.setSpeed(1000); //podajemy prędkość obrotu wyrażona w rpm 
           mojSilnik.step(-3500);
           delay(250);
           rozlozona = 1;
           zlozona = 0;
          }
        }
   if (signals.value == 0xFFA857)
        {
          
           mojSilnik.setSpeed(1000); //podajemy prędkość obrotu wyrażona w rpm 
           mojSilnik.step(-300);
           delay(250);
          }
        
        
           if (signals.value == 0xFFE01F)
        {
          
           mojSilnik.setSpeed(1000); //podajemy prędkość obrotu wyrażona w rpm 
           mojSilnik.step(300);
           delay(250);
          }
        }
    
  


        irrecv.resume(); // nasłuchujemy na następne nadanie      
        delay(250);  
}